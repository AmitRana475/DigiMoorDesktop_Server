<UserControl x:Class="WorkShipVersionII.Views.NotificationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:userControls="clr-namespace:WorkShipVersionII.Pagination"
             mc:Ignorable="d" 
             d:DesignHeight="510" d:DesignWidth="1300" Loaded="UserControl_Loaded">

    <UserControl.Resources>


        <Style TargetType="{x:Type Button}" x:Key="HeaderButton">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="MinHeight" Value="22"/>
            <Setter Property="MaxHeight" Value="25"/>
            <Setter Property="Background" Value="#ededef"/>
            <!--<Setter Property="Background" Value="#C0C0C0"/>-->
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="HeaderText">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>


        </Style>


    </UserControl.Resources>

    <!--<ScrollViewer VerticalScrollBarVisibility="Auto">-->
    <Grid>

        <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>-->

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="38*" />
            <RowDefinition Height="{Binding ComCertification.CerNotiWidth,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
            <RowDefinition Height="{Binding ComCertification.OCNotiWidth,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>

        </Grid.RowDefinitions>

        <UniformGrid Grid.Row="0" x:Name="HeaderUniformGrid" Columns="4"  >

            <Grid Margin="0,0,60,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>

                <Button  Style="{StaticResource HeaderButton1}"  Grid.Column="0" Grid.ColumnSpan="3" Command="{Binding AcknowledgeCommand}" HorizontalAlignment="Left" >
                    <TextBlock Style="{StaticResource HeaderText1}" Text=" Acknowledge "/>
                </Button>
                <TextBlock Style="{StaticResource HeaderText1}" HorizontalAlignment="Left" Foreground="Blue"  Padding="2" Grid.Column="2"  Text="Help" Margin="37,6,0,6" Grid.ColumnSpan="2"  />
            </Grid>

            <Grid Margin="-71,0,78,0">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=btnArchives, Path=Content}" Value="Archives">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource HeaderText}" Padding="2" HorizontalAlignment="Right"  Grid.Column="0"  Text="From" />
                <DatePicker x:Name="dtFrom"  Text="{Binding DateFrom,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedDate="{Binding SDateFrom,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Height="25" FontSize="12" FontFamily="Verdana" Grid.Column="1" Grid.ColumnSpan="3"  />

                <TextBlock  Style="{StaticResource HeaderText}" Padding="2" HorizontalAlignment="Right"  Grid.Column="4" Text="To" Margin="0,7,2,7" />

                <DatePicker  x:Name="dtTo" Text="{Binding DatesTo,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedDate="{Binding SDateTo,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  Height="25" FontSize="12" FontFamily="Verdana" Grid.Column="5" Grid.ColumnSpan="3"/>

                <Button   Width="33" Style="{StaticResource HeaderButton}"  Grid.Column="7" HorizontalAlignment="Right" Margin="0,4,-41,4" Command="{Binding GoCommand}" >
                    <TextBlock  Style="{StaticResource HeaderText}"   HorizontalAlignment="Center" 
                      Text="Go"/>
                </Button>

            </Grid>

            <Grid Margin="-14,0,70,0">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=NotificationGrid, Path=Items.Count}" Value="0">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!--<ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>-->
                </Grid.ColumnDefinitions>

                <!--<Button Style="{StaticResource HeaderButton}"   HorizontalAlignment="Left" Grid.Column="0" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold"  HorizontalAlignment="Center"   Text=" &lt; &lt;"/>
                    </Button>
                    <Button   Style="{StaticResource HeaderButton}" HorizontalAlignment="Left" Grid.Column="1"  >
                        <TextBlock  Style="{StaticResource HeaderText}" FontWeight="Bold" HorizontalAlignment="Center"   Text=" &lt; " />
                    </Button>
                    <TextBlock Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="2"  Text="No"  />
                    <Button   Style="{StaticResource HeaderButton}" HorizontalAlignment="Right"  Grid.Column="4" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold" HorizontalAlignment="Center" Text=" &gt; " />
                    </Button>
                    <Button   Style="{StaticResource HeaderButton}" HorizontalAlignment="Right" Grid.Column="5" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold" HorizontalAlignment="Center"  Text=" &gt; &gt;" />
                    </Button>-->

                <userControls:PaginationElements x:Name="DeviationPaging" Height="Auto" HorizontalAlignment="Center"   />



            </Grid>

            <Grid Margin="-65,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock  Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="0" Text="Acknowledged" Grid.ColumnSpan="3"   />
                <TextBlock Style="{StaticResource HeaderText}"  Grid.Column="3" x:Name="lblAckdCount"  Text="{Binding Acknowledged,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Left"  />
                <TextBlock  Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="4"  Text="To be Acknowledged" Grid.ColumnSpan="4" />
                <TextBlock  Style="{StaticResource HeaderText}"  Grid.Column="8" x:Name="lblAckCount"  Text="{Binding TobeAcknowledged,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Foreground="Red" HorizontalAlignment="Left"  />
                <Button x:Name="btnArchives" Width="80" Style="{StaticResource HeaderButton1}"  Grid.Column="9" Grid.ColumnSpan="3" HorizontalAlignment="Right"  Command="{Binding Path=ArchivesCommand}"   
                   CommandParameter="{Binding ElementName=btnArchives, Path=Content}" Content="{Binding BtnName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"   />
                <!--<TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Archives Archives Click="btnArchives_Click" " />-->

            </Grid>

        </UniformGrid>

        <Grid Grid.Row="1" Margin="0,5,0,0">

            <DataGrid x:Name="NotificationGrid" ItemsSource="{Binding ViewList.View}"  BorderThickness="0" Background="WhiteSmoke" FontFamily="Verdana" GridLinesVisibility="Horizontal" SelectionUnit="FullRow"  SelectionMode="Single" CanUserAddRows="False"
                      HeadersVisibility="Column"  BorderBrush="LightGray"    AutoGenerateColumns="False"   VerticalScrollBarVisibility="Auto" VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" RowHeight="24"  SelectedItem="{Binding SelectedItem}">

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Acknowledge}" Value="To be Acknowledged">
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <!--<DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0.2,0,0.2,0"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background"  Value="WhiteSmoke" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>-->

                <DataGrid.Columns >
                    <DataGridTemplateColumn MaxWidth="30" Width="*">
                        <DataGridTemplateColumn.Header>
                            <CheckBox x:Name="chkBox3"  IsChecked="{Binding Path=DataContext.AllSelected,
                       UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,
                       RelativeSource={RelativeSource FindAncestor,
                           AncestorType=DataGrid}}" />

                            <!--<CheckBox Content="Uncheck All Or Check All" Checked="CheckBox_Checked"    Unchecked="CheckBox_Unchecked" Click="CheckBox_Checked"/>-->


                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="chkDiscontinueb" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding IsCheckedV,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>



                    <DataGridTextColumn Binding="{Binding Path= wid,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Header="Id" Visibility="Collapsed"/>
                    <DataGridTextColumn Binding="{Binding Path= WRID,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Header="WRID" Visibility="Collapsed"/>
                    <DataGridTextColumn Binding="{Binding Path= UserName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Header="UserName" Visibility="Collapsed"/>
                    <DataGridTextColumn Binding="{Binding Path= NCType,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Header="UserName" Visibility="Collapsed"/>
                    <DataGridTextColumn Binding="{Binding Path= NCTypeStatus,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Header="UserName" Visibility="Collapsed"/>

                    <DataGridTextColumn  FontSize="12" IsReadOnly="True" Binding="{Binding Path= FullName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Crew Name" MaxWidth="400" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  FontSize="12" IsReadOnly="True" Binding="{Binding Path= Dates,UpdateSourceTrigger=PropertyChanged,StringFormat=\{0:dd-MMM-yyyy\}}" Header="Date" MaxWidth="110" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  FontSize="12" IsReadOnly="True" Binding="{Binding Path= NonConfirmity,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Deviations" MaxWidth="750" Width="*" >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn  FontSize="12" IsReadOnly="True" Binding="{Binding Path= Acknowledge,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Acknowledgements" MaxWidth="300" Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>

            </DataGrid>


        </Grid>



        <Grid Grid.Row="2" Visibility="{ Binding ComCertification.CerNotification,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <UniformGrid Margin="0,3,0,3" Grid.Row="0" x:Name="CertificationUniformGrid" Columns="4">
                <Grid>
                    <TextBlock Style="{StaticResource HeaderText}" FontSize="14" Text="Certificate Notification"   HorizontalAlignment="Left" />
                </Grid>

                <Grid/>


                <Grid  Margin="-14,0,70,0" >
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=CertificationGrid, Path=Items.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <!--<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button Style="{StaticResource HeaderButton}"  HorizontalAlignment="Left" Grid.Column="0" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold"  HorizontalAlignment="Center"   Text=" &lt; &lt;"/>
                    </Button>
                    <Button  Style="{StaticResource HeaderButton}" HorizontalAlignment="Left" Grid.Column="1"  >
                        <TextBlock  Style="{StaticResource HeaderText}" FontWeight="Bold" HorizontalAlignment="Center"   Text=" &lt; " />
                    </Button>
                    <TextBlock Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="2"  Text="No"  />
                    <Button  Style="{StaticResource HeaderButton}" HorizontalAlignment="Right"  Grid.Column="4" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold" HorizontalAlignment="Center" Text=" &gt; " />
                    </Button>
                    <Button  Style="{StaticResource HeaderButton}" HorizontalAlignment="Right" Grid.Column="5" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold" HorizontalAlignment="Center"  Text=" &gt; &gt;" />
                    </Button>-->

                    <userControls:PaginationElementsCertification x:Name="CertificatePaging" Height="Auto" HorizontalAlignment="Center"/>
                </Grid>

                <Grid Margin="-65,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock  Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="0" Text="Acknowledged" Grid.ColumnSpan="3"/>
                    <TextBlock Style="{StaticResource HeaderText}"  Grid.Column="3" x:Name="lblAckdCount1"  Text="{Binding CertiAcknowledged,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Left"  />
                    <TextBlock  Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="4"  Text="To be Acknowledged" Grid.ColumnSpan="4"/>
                    <TextBlock  Style="{StaticResource HeaderText}"  Grid.Column="8" x:Name="lblAckCount1"  Text="{Binding CertiTobeAcknowledged,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Foreground="Red" HorizontalAlignment="Left"  />

                </Grid>


            </UniformGrid>

            <Grid Grid.Row="1">
                <DataGrid x:Name="CertificationGrid" BorderThickness="0" ItemsSource="{Binding ViewCertiList.View}"  Background="WhiteSmoke" FontFamily="Verdana" GridLinesVisibility="Horizontal" SelectionUnit="FullRow"  SelectionMode="Single" CanUserAddRows="False"
                      HeadersVisibility="Column"  BorderBrush="LightGray"    AutoGenerateColumns="False"   VerticalScrollBarVisibility="Auto" VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" RowHeight="24"  SelectedItem="{Binding SelectedItem}">


                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Acknowledge}" Value="To be Acknowledged">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <!--<DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0.2,0,0.2,0"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background"  Value="WhiteSmoke" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>-->

                    <DataGrid.Columns >

                        <DataGridTemplateColumn MaxWidth="30" Width="*">
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="chkBox2"  IsChecked="{Binding Path=DataContext.AllSelectedCerti,
                       UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,
                       RelativeSource={RelativeSource FindAncestor,
                           AncestorType=DataGrid}}" />
                                <!--<CheckBox Content="Uncheck All Or Check All" Checked="CheckBox_Checked"    Unchecked="CheckBox_Unchecked" Click="CheckBox_Checked"/>-->
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>

                                <DataTemplate>
                                    <CheckBox x:Name="CertichkDiscontinues" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=IsCheckedV,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                                </DataTemplate>

                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Binding="{Binding Path= Id,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  Header="Id" Visibility="Collapsed"/>

                        <DataGridTextColumn  Binding="{Binding Path= CertificateName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Certificatie Name" MaxWidth="650" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn  Binding="{Binding Path= IssueDate,StringFormat=\{0:dd-MMM-yyyy\},UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Issue Date" MaxWidth="110" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Binding="{Binding Path= ExpiryDate,StringFormat=\{0:dd-MMM-yyyy\},UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Expiry Date" MaxWidth="110" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Binding="{Binding Path= SurveyDate,StringFormat=\{0:dd-MMM-yyyy\},UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Survey Date" MaxWidth="110" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn  Binding="{Binding Path= AlertFrequencyType,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Alert Frequency Type" MaxWidth="300" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Binding="{Binding Path= Acknowledge,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Acknowledgements" MaxWidth="300" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>


                </DataGrid>
            </Grid>

        </Grid>




        <Grid Grid.Row="3" Visibility="{Binding ComCertification.OCNotification,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>


            <UniformGrid Margin="0,3,0,3" Grid.Row="0" x:Name="OffNotificationUniformGrid" Columns="4">
                <Grid>
                    <TextBlock Style="{StaticResource HeaderText}" FontSize="14" Text="Office Comments"   HorizontalAlignment="Left" />
                </Grid>

                <Grid/>


                <Grid  Margin="-14,0,70,0" >
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=OffNotificationGrid, Path=Items.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <!--<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>-->

                    <!--<Button Style="{StaticResource HeaderButton}"  HorizontalAlignment="Left" Grid.Column="0" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold"  HorizontalAlignment="Center"   Text=" &lt; &lt;"/>
                    </Button>
                    <Button  Style="{StaticResource HeaderButton}" HorizontalAlignment="Left" Grid.Column="1"  >
                        <TextBlock  Style="{StaticResource HeaderText}" FontWeight="Bold" HorizontalAlignment="Center"   Text=" &lt; " />
                    </Button>
                    <TextBlock Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="2"  Text="No"  />
                    <Button  Style="{StaticResource HeaderButton}" HorizontalAlignment="Right"  Grid.Column="4" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold" HorizontalAlignment="Center" Text=" &gt; " />
                    </Button>
                    <Button  Style="{StaticResource HeaderButton}" HorizontalAlignment="Right" Grid.Column="5" >
                        <TextBlock Style="{StaticResource HeaderText}"  FontWeight="Bold" HorizontalAlignment="Center"  Text=" &gt; &gt;" />
                    </Button>-->

                    <userControls:PaginationElementsOffice x:Name="OfficePaging" Height="Auto" HorizontalAlignment="Center"/>
                </Grid>

                <Grid Margin="-65,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock  Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="0" Text="Acknowledged" Grid.ColumnSpan="3"   />
                    <TextBlock Style="{StaticResource HeaderText}"  Grid.Column="3" x:Name="lblAckdCount2"  Text="{Binding OffiAcknowledged,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalAlignment="Left"  />
                    <TextBlock  Style="{StaticResource HeaderText}" HorizontalAlignment="Center"  Grid.Column="4"  Text="To be Acknowledged" Grid.ColumnSpan="4" />
                    <TextBlock  Style="{StaticResource HeaderText}"  Grid.Column="8" x:Name="lblAckCount2"  Text="{Binding OffiTobeAcknowledged,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Foreground="Red" HorizontalAlignment="Left"  />

                </Grid>


            </UniformGrid>


            <Grid Grid.Row="1"  Margin="0,0,0,5">
                <DataGrid  x:Name="OffNotificationGrid" BorderThickness="0" Background="WhiteSmoke" FontFamily="Verdana" FontSize="12" GridLinesVisibility="Horizontal" SelectionUnit="FullRow"  SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column"  BorderBrush="LightGray" 
                           ItemsSource="{Binding ViewOffiList.View}" DataContext="{Binding}"  AutoGenerateColumns="False"   VerticalScrollBarVisibility="Auto" VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"   SelectedItem="{Binding SelectedItem}" RowHeight="24">

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Acknowledge_Status}" Value="To be Acknowledged">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0.2,0,0.2,0"/>
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background"  Value="WhiteSmoke" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns >
                        <DataGridTemplateColumn MaxWidth="30" Width="*">
                            <DataGridTemplateColumn.Header>
                                <CheckBox x:Name="chkBox1"  IsChecked="{Binding Path=DataContext.AllSelectedOffi,
                       UpdateSourceTrigger=PropertyChanged,Mode=TwoWay,
                       RelativeSource={RelativeSource FindAncestor,
                           AncestorType=DataGrid}}" />
                                <!--<CheckBox Content="Uncheck All Or Check All" Checked="CheckBox_Checked"    Unchecked="CheckBox_Unchecked" Click="CheckBox_Checked"/>-->
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>

                                <DataTemplate>
                                    <CheckBox x:Name="OffichkDiscontinue" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=IsCheckedV,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />

                                </DataTemplate>

                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <DataGridTextColumn Binding="{Binding Path= Comnt_ID,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Comnt ID" Visibility="Hidden"  />
                        <DataGridTextColumn Binding="{Binding Path= Vessel_ID,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Vessel ID" Visibility="Hidden"  />
                        <DataGridTextColumn Binding="{Binding Path= UserName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="UserName" Visibility="Hidden"  />

                        <DataGridTextColumn Binding="{Binding Path= FullName,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Crew Name" MaxWidth="400" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding Path= NC_Date,StringFormat=\{0:dd-MMM-yyyy\},UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  FontSize="12" IsReadOnly="True" Header="Date" MaxWidth="140" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding Path= Office_Comment,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Comments" MaxWidth="650" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn  Binding="{Binding Path= Comment_Date,StringFormat=\{0:dd-MMM-yyyy\},UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Comment Date" MaxWidth="140" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding Path= Acknowledge_Status,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="12" IsReadOnly="True" Header="Acknowledgements" MaxWidth="300" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>


                </DataGrid>
            </Grid>

        </Grid>


    </Grid>
    <!--</ScrollViewer>-->

</UserControl>