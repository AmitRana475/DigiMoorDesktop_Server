<UserControl x:Class="WorkShipVersionII.WorkHoursView.AssignLooseEquipToWinchView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkShipVersionII.WorkHoursView"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="1200">
    <Grid >

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />

        </Grid.RowDefinitions>

        <!--<UniformGrid Grid.Row="0" MinHeight="31" Margin="0,0,0,5" x:Name="AddCrewUniformGrid" Columns="1">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="85*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="1"  HorizontalAlignment="Right" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Blue" FontFamily="Verdana" FontSize="14"  Text="Help" Padding="0,0,10,0"   />
            </Grid>
        </UniformGrid>

        <TextBlock Style="{StaticResource HeaderText1}" TextAlignment="Center" Foreground="Blue" Background="Azure" FontWeight="Bold" Text="ASSIGN LOOSE EQUIPMENT TO WINCH"></TextBlock>-->

        <GroupBox Height="400" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible"   >

            <GroupBox.Header>
                <GroupBox FontWeight="Bold" FontSize="15" Header="ASSIGN LOOSE EQUIPMENT TO WINCH">
                </GroupBox>
            </GroupBox.Header>
            <Grid  Grid.Row="1">

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />

                    <!--<RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="14*" />
                <RowDefinition Height="13*" />-->

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="8*"/>

                </Grid.ColumnDefinitions>

                <Canvas Grid.Column="2" Grid.Row="3" >
                    <TextBlock Text="Loose Equipment Type"  Style="{StaticResource HeaderText1}" />
                    <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="154" Canvas.Top="-5"  />
                </Canvas>
                <ComboBox x:Name="comboRank" Grid.Column="3" SelectionChanged="comboRank_SelectionChanged"  Grid.Row="3" Text="--Select--"   IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Path = RopeType,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberPath="LooseEquipmentType" SelectedValue="{Binding Path = SRopeType.Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding Path = SRopeType,UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Id" VerticalContentAlignment="Center"  >


                </ComboBox>

                <TextBlock Text="{Binding AssignLooseEErrorMessages.LooseETypeMessage,Mode=TwoWay}" FontFamily="Verdana" Foreground="Red" FontSize="13" Grid.Column="3" Grid.Row="4"  />


                <Canvas Grid.Column="2" Grid.Row="5" >
                    <TextBlock Text="AssignEquipment to Winch"  Style="{StaticResource HeaderText1}" />
                    <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="184" Canvas.Top="-5"  />
                </Canvas>

                <ComboBox x:Name="comboAssrope" Grid.Column="3"  Grid.Row="5" Text="--Select--" DropDownClosed="comboAssrope_DropDownClosed"   IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Path = AssignRope,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberPath="AssignedNumber" SelectedValue="{Binding Path = SRopeAss.Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding Path = SRopeAss,UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Id" VerticalContentAlignment="Center"   >


                </ComboBox>

                <TextBlock Text="{Binding AssignLooseEErrorMessages.AssignWinchMessage,Mode=TwoWay}" FontFamily="Verdana" Foreground="Red" FontSize="13" Grid.Column="3" Grid.Row="6"  />

                <Canvas Grid.Column="2" Grid.Row="7">
                    <TextBlock Text="WinchLocation Assign"   Style="{StaticResource HeaderText1}" />
                    <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="150" Canvas.Top="-5"  />
                </Canvas>

                <!--<TextBox x:Name="txtNewAssignedLocation" IsReadOnly="True"  Grid.Column="2" Grid.Row="9" MaxLength="20" Text=" " VerticalContentAlignment="Center"  >

            </TextBox>-->
                <TextBlock x:Name="txtNewAssignedLocation" Text="--" Margin="5,2,0,1" Grid.Column="3" Grid.Row="7"  Style="{StaticResource HeaderText1}" />
                <!--<TextBox x:Name="txtNewAssignedLocation" IsReadOnly="True"  Grid.Column="2" Grid.Row="7" MaxLength="20" Text="{Binding AssignRopeToWinch.AssignedLocation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" VerticalContentAlignment="Center"  >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction  Command="{Binding LostFocusCDCCommand}" CommandParameter="{Binding AssignRopeToWinch.AssignedLocation}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>-->





                <TextBlock Text="{Binding AddCrewMessages.DepartmentMessage,Mode=TwoWay}" FontFamily="Verdana" Foreground="Red" FontSize="13" Grid.Column="3" Grid.Row="6"  />



                <Canvas Margin="20,0,0,0" Grid.Column="3" Grid.Row="11" >
                    <Button x:Name="btnReset"  Content="Reset" Command="{Binding ResetCommand}" CommandParameter="{Binding AddCrewDetail}"   Width="65" Style="{StaticResource HeaderButton1}" Canvas.Left="-10" Canvas.Top="4"  />




                    <Button x:Name="btnSave" IsEnabled="False" Command="{Binding ElementName=WorkHoursContent1,Path=DataContext.NavCommand}" CommandParameter="AssignLooseEquipDetails" Width="65" Canvas.Left="61" Style="{StaticResource HeaderButton1}" Canvas.Top="4" >
                        <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Save "/>
                        <!--Command="{Binding ElementName=CrewManagementContent,Path=DataContext.NavCommand}" CommandParameter="NextCrewDetail"-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding SaveCommand}" CommandParameter="{Binding AssignLooseEquipToWinch}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>


                    </Button>


                    <Button x:Name="btnCancel"   Width="65" Canvas.Left="132" Style="{StaticResource HeaderButton1}" Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="AssignLooseEquipDetails" Canvas.Top="4">
                        <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Cancel "/>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CancelCommand}" CommandParameter="{Binding AssignLooseEquipDetails}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </Button>

                </Canvas>



            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
