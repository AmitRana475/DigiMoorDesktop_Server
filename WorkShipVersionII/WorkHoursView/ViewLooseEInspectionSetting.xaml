<UserControl x:Class="WorkShipVersionII.WorkHoursView.ViewLooseEInspectionSetting"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkShipVersionII.WorkHoursView"
               xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="1000">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="29*"/>
            <!--<RowDefinition Height="*"/>-->
            <!--<RowDefinition Height="60*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="4*"/>-->




        </Grid.RowDefinitions>


      
        <Canvas Margin="50,50,0,0"  Grid.Column="0" Grid.Row="0" >

            <TextBlock Text="Loose EquipmentType" Canvas.Left="20" TextWrapping="Wrap" Width="180"   Style="{StaticResource HeaderText1}" />

            <ComboBox x:Name="comboLooseEtype" Height="25" DropDownClosed="comboLooseEtype_DropDownClosed" Canvas.Left="190" Width="220" Text="--Select--"    IsEditable="True" IsReadOnly="True"  VerticalContentAlignment="Center"   >
            </ComboBox>


            <TextBlock Grid.Column="1" Canvas.Left="900" HorizontalAlignment="Right" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Blue" FontFamily="Verdana" FontSize="14"   Padding="0,0,10,0" >
                      <Hyperlink Command="{Binding HelpCommand}" Name="Help" Foreground="#0000cc">Help</Hyperlink>
            </TextBlock>


        </Canvas>

        <Canvas Grid.Row="2" >
            <TextBlock Canvas.Top="-20" FontSize="15"   Canvas.Left="30" Text="The values are set by your office for inspection, discard, end to end and winch rotation settings. Where value = '0', it means the field is either not defined or infinite. "></TextBlock>
        </Canvas>



        <Grid Grid.Row="1" Margin="0,0,0,0" Grid.ColumnSpan="2">
            <!--<TextBlock Style="{Stat2icResource HeaderText1}" TextAlignment="Center" Foreground="Blue" Background="Azure" FontWeight="Bold" Margin="0,-30,0,0" Text="ADD ROPE CROPPING"></TextBlock>-->



            <ScrollViewer  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0*"/>
                        <ColumnDefinition Width="53*"/>
                        <ColumnDefinition Width="7*"/>
                        <ColumnDefinition Width="40*"/>
                        <ColumnDefinition Width="40*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="90*"/>
                    </Grid.RowDefinitions>




                    <DataGrid Grid.Row="1" Margin="-30,-250,0,0" Height="55" Visibility="Visible" x:Name="MooringLooseEInspectionGrid"  Width="950"    BorderThickness="1" Background="WhiteSmoke" FontFamily="Verdana" FontSize="12" GridLinesVisibility="All" SelectionUnit="FullRow" 
                     SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column" RowHeight="25"  BorderBrush="LightGray" ColumnWidth="Auto"   AutoGenerateColumns="False"     VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" Grid.ColumnSpan="3" Grid.Column="1" >
                        <!--<DataGrid x:Name="MooringRopeInspectionGrid" Width="1800" ItemsSource="{Binding Path=LoadInspections,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" BorderThickness="1" Background="WhiteSmoke" FontFamily="Verdana" FontSize="12" GridLinesVisibility="All" SelectionUnit="FullRow" 
                     RowHeight="25" SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column"  BorderBrush="LightGray" ColumnWidth="Auto"   AutoGenerateColumns="False"     VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" >-->
                        <!--<DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                <Setter Property="Height" Value="{x:Static sys:Double.NaN}"/>
                            </Style>
                        </DataGrid.RowStyle>-->

                        <DataGrid.Columns>
                            <DataGridTextColumn   Binding="{Binding Path = Id,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Id"  Visibility="Hidden"/>

                            <DataGridTemplateColumn   IsReadOnly="True" Header="Equipment Type"  MaxWidth="380" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Foreground="Black" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Path= looseequipmenttype, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn   IsReadOnly="True" Header="Inspection Frequency(in months)"  MaxWidth="380" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Foreground="Black" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Path= InspectionFrequency, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Visibility="Hidden"   IsReadOnly="True" Header="Max Running Hrs."  MaxWidth="180" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Foreground="Black" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Path= MaximumRunningHours, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn   IsReadOnly="True" Header="Max Duration Allowed(months)"  MaxWidth="240" Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock  Foreground="Black" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Path= MaximumMonthsAllowed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>




                        </DataGrid.Columns>

                    </DataGrid>

                   
                </Grid>
            </ScrollViewer>
        </Grid>

      
    </Grid>
</UserControl>
