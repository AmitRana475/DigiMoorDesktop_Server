<UserControl x:Class="WorkShipVersionII.WorkHoursView.AddCrossShifingWinch"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkShipVersionII.WorkHoursView"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="560" d:DesignWidth="800">
    <GroupBox Header="" >
    <Grid  >

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />

        </Grid.RowDefinitions>
            <TextBlock Style="{StaticResource HeaderText1}" TextAlignment="Center" Foreground="Blue" Background="Azure" FontWeight="Bold" Text="ADD CROSS SHIFTING"></TextBlock>
            <UniformGrid Grid.Row="0" MinHeight="31" Margin="0,0,0,5" x:Name="AddCrewUniformGrid" Columns="1">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="85*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>

                <!--<TextBlock Grid.Column="1"  HorizontalAlignment="Right" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Blue" FontFamily="Verdana" FontSize="14"  Text="Help" Padding="0,0,10,0"   />-->
            </Grid>
        </UniformGrid>

        <Grid Grid.Row="1" >

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                    <RowDefinition Height="10*" />
                </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*"/>
                <ColumnDefinition Width="30*"/>
                <ColumnDefinition Width="25*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="25*"/>
                <ColumnDefinition Width="8*"/>

            </Grid.ColumnDefinitions>

            <Canvas Grid.Column="1" Grid.Row="3" >
                <TextBlock Text="Select Rope"  Style="{StaticResource HeaderText1}" />
                <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="84" Canvas.Top="-5"  />
            </Canvas>
            <ComboBox x:Name="comboRope" Grid.Column="2"  Grid.Row="3" Text="--Select--"   IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Path = RopeType,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberPath="CertificateNo" SelectedItem="{Binding Path = SRopeType,UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding Path = SRopeType.Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedValuePath="Id" VerticalContentAlignment="Center" SelectionChanged="comboRope_SelectionChanged"  >



            </ComboBox>

            <TextBlock Text="Outboard End in Use(A/B)" Grid.Column="1" Grid.Row="5"  Style="{StaticResource HeaderText1}" />

            <TextBlock x:Name="txtOutboard" Text="--" Margin="20,0,0,0" Grid.Column="2" Grid.Row="5"  Style="{StaticResource HeaderText1}" />

            <!--<Canvas Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="5" >
                <RadioButton x:Name="rdoWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    
   CommandParameter="{Binding ElementName=rdoWatchkeeper, Path=Content}"   GroupName="1" IsChecked="{Binding AssignRopeToWinch.Outboard,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Content="A" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
                <RadioButton x:Name="rdoNonWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    GroupName="1" IsChecked="{Binding AssignRopeToWinch.Outboard1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
   CommandParameter="{Binding ElementName=rdoNonWatchkeeper, Path=Content}"  Content="B" Canvas.Left="40" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
            </Canvas>-->

            <Canvas Grid.Column="1" Grid.Row="7" >
                <TextBlock Text="Rope winch assigned"  Style="{StaticResource HeaderText1}" />
               
            </Canvas>
            <TextBox x:Name="txtAssignedWinch"  Grid.Column="2" Grid.Row="7" MaxLength="20" Text="{Binding CrossShifting.AssignedWinch,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" VerticalContentAlignment="Center"  >
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction  Command="{Binding LostFocusCDCCommand}" CommandParameter="{Binding AssignRopeToWinch.AssignedLocation}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
            </TextBox>


            <Canvas Grid.Column="1" Grid.Row="9">
                <TextBlock Text="RopeLocation Assigned"   Style="{StaticResource HeaderText1}" />
                
            </Canvas>
                <TextBox x:Name="txtAssignedLocation"  Grid.Column="2" Grid.Row="9" MaxLength="20" Text="{Binding CrossShifting.AssignedLocation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" VerticalContentAlignment="Center"  >
                <!--<i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction  Command="{Binding LostFocusCDCCommand}" CommandParameter="{Binding AssignRopeToWinch.AssignedLocation}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>-->
            </TextBox>

               
            <Canvas Grid.Column="1" Grid.Row="11">
                <TextBlock Text="Shifting Date(Rope)"   Style="{StaticResource HeaderText1}" />
                <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="134" Canvas.Top="-5"  />
            </Canvas>

                <DatePicker x:Name="dpdateofshifting" Grid.Column="2" Grid.Row="11" CalendarStyle="{StaticResource styleCalendar}"  Text="{Binding DateofShifting,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  FontFamily="Verdana" FontSize="14" VerticalContentAlignment="Center"   >
                <DatePicker.Resources>
                    <Style TargetType="DatePickerTextBox">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Height" Value="Auto"/>
                    </Style>
                </DatePicker.Resources>
            </DatePicker>


                <Canvas Grid.Column="1" Grid.Row="13" >
                    <TextBlock Text="AssignRope to Winch"  Style="{StaticResource HeaderText1}" />
                    <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="144" Canvas.Top="-5"  />
                </Canvas>
                <ComboBox x:Name="comboAssrope" Grid.Column="2"  Grid.Row="13" Text="--Select--"   IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Path = AssignRope,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberPath="AssignedNumber" SelectedValue="{Binding Path = SRopeAss.Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding Path = SRopeAss,UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Id" VerticalContentAlignment="Center" SelectionChanged="comboAssrope_SelectionChanged"  >


                </ComboBox>

                <TextBlock Text="Shifted Outboard End" Grid.Column="1" Grid.Row="15"  Style="{StaticResource HeaderText1}" />
                

                <Canvas Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="15" >
                    <RadioButton x:Name="rdoWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    
   CommandParameter="{Binding ElementName=rdoWatchkeeper, Path=Content}"   GroupName="1" IsChecked="{Binding CrossShifting.OutboardEndinUse,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Content="A" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
                    <RadioButton x:Name="rdoNonWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    GroupName="1" IsChecked="{Binding CrossShifting.OutboardEndinUse1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
   CommandParameter="{Binding ElementName=rdoNonWatchkeeper, Path=Content}"  Content="B" Canvas.Left="40" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
                </Canvas>

                <Canvas Grid.Column="1" Grid.Row="17">
                    <TextBlock Text="RopeLocation Assign"   Style="{StaticResource HeaderText1}" />
                    <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="147" Canvas.Top="-5"  />
                </Canvas>

                
                    <TextBox x:Name="txtNewAssignedLocation"  Grid.Column="2" Grid.Row="17" MaxLength="20" Text=" " VerticalContentAlignment="Center"  >
                       
                    </TextBox>


                    <Canvas  Grid.Column="2" Grid.Row="19" >
                    <Button x:Name="btnReset" Margin="-80,0,0,0" Content="Reset" Command="{Binding ResetCommand}" CommandParameter="{Binding AddCrewDetail}"   Width="65" Style="{StaticResource HeaderButton1}" Canvas.Left="30" Canvas.Top="4"  />

                <!--<Button x:Name="btnSave"  Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="AssignRopeToWinch" Width="65" Canvas.Left="101" Style="{StaticResource HeaderButton1}" Canvas.Top="4" Click="btnSave_Click" >-->
                <!--<Button x:Name="btnSave"  Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="AssignRopeToWinch" Width="65" Canvas.Left="101" Style="{StaticResource HeaderButton1}" Canvas.Top="4"  >
                    <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Save "/>-->
                <!--Command="{Binding ElementName=CrewManagementContent,Path=DataContext.NavCommand}" CommandParameter="NextCrewDetail"-->

                <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding SaveCommand}" CommandParameter="{Binding AssignRopeToWinch}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->


                <!--</Button>-->
                    <Button x:Name="btnSave" Margin="-80,0,0,0"  Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="CrossShiftingWinch" Width="65" Canvas.Left="101" Style="{StaticResource HeaderButton1}" Canvas.Top="4" >
                    <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Save "/>
                    <!--Command="{Binding ElementName=CrewManagementContent,Path=DataContext.NavCommand}" CommandParameter="NextCrewDetail"-->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding SaveCommand}" CommandParameter="{Binding CrossShifting}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>


                </Button>


                    <Button x:Name="btnCancel" Margin="-80,0,0,0"  Width="65" Canvas.Left="172" Style="{StaticResource HeaderButton1}" Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="CrossShiftingWinch" Canvas.Top="4">
                    <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Cancel "/>

                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CancelCommand}" CommandParameter="{Binding AddCrewDetail}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->

                </Button>

            </Canvas>



        </Grid>

    </Grid>
    </GroupBox>
</UserControl>