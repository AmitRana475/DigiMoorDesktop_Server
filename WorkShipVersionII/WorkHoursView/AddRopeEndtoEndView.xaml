<UserControl x:Class="WorkShipVersionII.WorkHoursView.AddRopeEndtoEndView"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:WorkShipVersionII.WorkHoursView"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1200">
    <Grid >
       
            

    
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>


            <RowDefinition />

        </Grid.RowDefinitions>

        
        <UniformGrid Grid.Row="0" MinHeight="31" Margin="0,0,0,5" x:Name="AddCrewUniformGrid" Columns="1">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="85*"/>
                    <ColumnDefinition Width="15*"/>
                </Grid.ColumnDefinitions>

                <!--<TextBlock Grid.Column="1"  HorizontalAlignment="Right" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Blue" FontFamily="Verdana" FontSize="14"  Text="Help" Padding="0,0,10,0"   />-->
            </Grid>
        </UniformGrid>
        
        <ScrollViewer Height="550" >

            <GroupBox Height="700" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible"   >

                <GroupBox.Header>
                    <GroupBox FontWeight="Bold" FontSize="15" Header="LINE END TO END">
                    </GroupBox>
                </GroupBox.Header>

                <Grid Height="670" Name="endtoEndGrid" ScrollViewer.HorizontalScrollBarVisibility="Visible" Grid.Row="1">


                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />
                        <!--<RowDefinition Height="10*" />
                        <RowDefinition Height="10*" />-->


                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="10*"/>
                        <ColumnDefinition Width="20*"/>                      
                        <ColumnDefinition Width="25*"/>
                        <ColumnDefinition Width="25*"/>
                        <ColumnDefinition Width="8*"/>

                    </Grid.ColumnDefinitions>

                    <!--<TextBlock Grid.Column="2" Grid.Row="1" TextAlignment="Center" Foreground="Blue" Background="Azure" FontWeight="Bold" Text="ADD ROPE END TO END"></TextBlock>-->
                    <Canvas Grid.Column="2" Grid.Row="3" >
                        <TextBlock Text="Select Line"  Style="{StaticResource HeaderText1}" />
                        <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="84" Canvas.Top="-5"  />
                    </Canvas>
                    <ComboBox x:Name="comboRank" Grid.Column="3"  Grid.Row="3" Text="--Select--" DropDownClosed="comboRank_DropDownClosed"   IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Path = RopeType,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberPath="CertificateNo" SelectedItem="{Binding Path = SRopeType,UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding Path = SRopeType.Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedValuePath="Id" VerticalContentAlignment="Center" SelectionChanged="comboRank_SelectionChanged"  >



                    </ComboBox>

                    <TextBlock Text="Outboard End in Use(A/B)" Grid.Column="2" Grid.Row="5"  Style="{StaticResource HeaderText1}" Margin="0,2,0,1" />

                    <TextBlock x:Name="txtOutboard" Text="--" Margin="0,0,0,0" Grid.Column="3" Grid.Row="5"  Style="{StaticResource HeaderText1}" />

                    <!--<Canvas Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="5" >
                <RadioButton x:Name="rdoWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    
   CommandParameter="{Binding ElementName=rdoWatchkeeper, Path=Content}"   GroupName="1" IsChecked="{Binding AssignRopeToWinch.Outboard,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Content="A" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
                <RadioButton x:Name="rdoNonWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    GroupName="1" IsChecked="{Binding AssignRopeToWinch.Outboard1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
   CommandParameter="{Binding ElementName=rdoNonWatchkeeper, Path=Content}"  Content="B" Canvas.Left="40" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
            </Canvas>-->

                    <Canvas Grid.Column="2" Grid.Row="7" >
                        <TextBlock Text="Line Assigned Winch"  Style="{StaticResource HeaderText1}" />

                    </Canvas>
                    <!--<TextBox x:Name="txtAssignedWinch"  Grid.Column="2" Grid.Row="7" MaxLength="20" Text="{Binding RopeEndToEnd.AssignedWinch,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" VerticalContentAlignment="Center"  >
              
            </TextBox>-->
                    <TextBlock x:Name="txtAssignedWinch" Text="--" Margin="0,0,0,0" Grid.Column="3" Grid.Row="7"  Style="{StaticResource HeaderText1}" />


                    <Canvas Grid.Column="2" Grid.Row="9">
                        <TextBlock Text="Line Location Assigned" TextWrapping="Wrap"  Style="{StaticResource HeaderText1}" />

                    </Canvas>
                    <!--<TextBox x:Name="txtAssignedLocation"  Grid.Column="2" Grid.Row="9" MaxLength="20" Text="{Binding RopeEndToEnd.AssignedLocation,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" VerticalContentAlignment="Center"  >
               
            </TextBox>-->

                    <TextBlock x:Name="txtAssignedLocation" Text="--" Margin="0,0,0,0" Grid.Column="3" Grid.Row="9"  Style="{StaticResource HeaderText1}" />



                    <Canvas Grid.Column="2" Grid.Row="11">
                        <TextBlock Text="EndtoEnd Done Date"   Style="{StaticResource HeaderText1}" />
                        <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="148" Canvas.Top="-5"  />
                    </Canvas>

                    <DatePicker x:Name="dpRecDate" CalendarClosed="DpRecDate_CalendarClosed" DisplayDateEnd="{x:Static sys:DateTime.Today}" Grid.Column="3" Grid.Row="11" CalendarStyle="{StaticResource styleCalendar}"  Text="{Binding EndtoEndDoneDate,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  FontFamily="Verdana" FontSize="14" VerticalContentAlignment="Center"   >
                        <DatePicker.Resources>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Setter Property="Height" Value="Auto"/>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>

                    <TextBlock Text="Shifted Outboard End" Grid.Column="2" Grid.Row="13"  Style="{StaticResource HeaderText1}" Margin="0,2,0,1" />


                    <TextBlock x:Name="txtOutboardcurrent" Text="--" Margin="0,0,0,0" Grid.Column="3" Grid.Row="13"  Style="{StaticResource HeaderText1}" />


                    <TextBlock Visibility="Hidden"  Text="Was line shifted to another Winch" Grid.Column="2" Style="{StaticResource HeaderText1}" Grid.Row="14" Margin="0,17" Grid.RowSpan="3"    />


                    <ComboBox x:Name="CBwasshift" Visibility="Hidden" Grid.Column="3" Grid.Row="15"  IsEditable="True" IsReadOnly="True" VerticalContentAlignment="Center"  DropDownClosed="CBwasshift_DropDownClosed" 
                                               
                                      Text="Select" >
                        <ComboBoxItem>No</ComboBoxItem>
                        <ComboBoxItem>Yes</ComboBoxItem>


                    </ComboBox>


                    <TextBlock Visibility="Hidden" Name="lblOut" Text="Outboard End in Use(A/B)" Grid.Column="2" Grid.Row="17"  Style="{StaticResource HeaderText1}" />

                    <Canvas Visibility="Hidden" Name="rdbOut" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="17" >
                        <RadioButton x:Name="rdoWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    
   CommandParameter="{Binding ElementName=rdoWatchkeeper, Path=Content}"   GroupName="1" IsChecked="{Binding RopeEndToEnd.Outboard,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Content="A" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
                        <RadioButton x:Name="rdoNonWatchkeeper"  Command="{Binding Path=RadioBTNCommand}"    GroupName="1" IsChecked="{Binding RopeEndToEnd.Outboard1,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
   CommandParameter="{Binding ElementName=rdoNonWatchkeeper, Path=Content}"  Content="B" Canvas.Left="40" FontFamily="Verdana" FontSize="14" Canvas.Top="7" />
                    </Canvas>

                    <Canvas Visibility="Hidden" Name="lblAssigndt" Grid.Column="2" Grid.Row="19">
                        <TextBlock Text="Assigned Date"   Style="{StaticResource HeaderText1}" />
                        <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="106" Canvas.Top="-5"  />
                    </Canvas>

                    <DatePicker x:Name="dpAssinDate" DisplayDateEnd="{x:Static sys:DateTime.Today}" Visibility="Hidden" Grid.Column="3" Grid.Row="19" CalendarStyle="{StaticResource styleCalendar}"  Text="{Binding AssignedDate,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  FontFamily="Verdana" FontSize="14" VerticalContentAlignment="Center"   >
                        <DatePicker.Resources>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="IsReadOnly" Value="True"/>
                                <Setter Property="Height" Value="Auto"/>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>

                    <Canvas Visibility="Hidden" Name="lblAssigntownch" Grid.Column="2" Grid.Row="21" >
                        <TextBlock Text="AssignRope to Winch"  Style="{StaticResource HeaderText1}" />
                        <Label Height="20" Content="*" FontFamily="Verdana" Foreground="Red" FontSize="16" Canvas.Left="144" Canvas.Top="-5"  />
                    </Canvas>

                    <ComboBox x:Name="comboAssrope" Visibility="Hidden" Grid.Column="3"  Grid.Row="21" Text="--Select--"   IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Path = AssignRope,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayMemberPath="AssignedNumber" SelectedValue="{Binding Path = SRopeAss.Id,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" SelectedItem="{Binding Path = SRopeAss,UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Id" VerticalContentAlignment="Center"   >


                    </ComboBox>





                    <Canvas Margin="30,0,0,0" Name="bntSection" Grid.Column="3" Grid.Row="17" >
                        <Button x:Name="btnReset" Margin="-50,0,0,0"  Content="Reset" Command="{Binding ResetCommand}" CommandParameter="{Binding AddCrewDetail}"   Width="65" Style="{StaticResource HeaderButton1}" Canvas.Left="30" Canvas.Top="4"  />

                        <!--<Button x:Name="btnSave"  Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="AssignRopeToWinch" Width="65" Canvas.Left="101" Style="{StaticResource HeaderButton1}" Canvas.Top="4" Click="btnSave_Click" >-->
                        <!--<Button x:Name="btnSave"  Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="AssignRopeToWinch" Width="65" Canvas.Left="101" Style="{StaticResource HeaderButton1}" Canvas.Top="4"  >
                    <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Save "/>-->
                        <!--Command="{Binding ElementName=CrewManagementContent,Path=DataContext.NavCommand}" CommandParameter="NextCrewDetail"-->

                        <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding SaveCommand}" CommandParameter="{Binding AssignRopeToWinch}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->


                        <!--</Button>-->
                        <Button x:Name="btnSave" IsEnabled="False" Margin="-50,0,0,0"  Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="RopeEndtoEndListView" Width="65" Canvas.Left="101" Style="{StaticResource HeaderButton1}" Canvas.Top="4" >
                            <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Save "/>
                            <!--Command="{Binding ElementName=CrewManagementContent,Path=DataContext.NavCommand}" CommandParameter="NextCrewDetail"-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding SaveCommand}" CommandParameter="{Binding RopeEndToEnd}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>


                        </Button>


                        <Button x:Name="btnCancel" Margin="-50,0,0,0"  Width="65" Canvas.Left="172" Style="{StaticResource HeaderButton1}" Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="RopeEndtoEndListView" Canvas.Top="4">
                            <TextBlock  Style="{StaticResource HeaderText1}"  HorizontalAlignment="Center" Text=" Cancel "/>

                            <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding CancelCommand}" CommandParameter="{Binding RopeEndtoEndListView}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                        </Button>

                    </Canvas>



                </Grid>

            </GroupBox>

        </ScrollViewer>

    </Grid>
</UserControl>
