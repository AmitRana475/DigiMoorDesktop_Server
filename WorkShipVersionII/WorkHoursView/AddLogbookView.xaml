<UserControl x:Class="WorkShipVersionII.WorkHoursView.AddLogbookView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:dates="clr-namespace:WorkShipVersionII.Control"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkShipVersionII.WorkHoursView"
             
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
            Margin="0,-80,0,0"
             Height="630" Width="950" Background="WhiteSmoke"  VerticalAlignment="Top">
    <Grid >
        <GroupBox Margin="15,15,15,15" Header=" Add Event " FontFamily="Verdana" FontSize="14" BorderBrush="LightGray">
            <Canvas>
                <TextBlock Text="Event Name" Style="{StaticResource HeaderText1}" Canvas.Left="19" Canvas.Top="20" />
                <Label Height="20" Content="*" Foreground="Red" FontSize="16" Canvas.Left="102" Canvas.Top="13"  />

                <TextBox x:Name="txtRankName" Text="{Binding LogbookStatus.EventName, UpdateSourceTrigger=PropertyChanged , Mode=TwoWay}" Height="31" FontFamily="Verdana" FontSize="14" Width="378" VerticalAlignment="Center" Canvas.Left="161" Canvas.Top="10"/>
                <TextBlock  Text="{Binding AddGroupMessage.FullNameMessage,Mode=TwoWay}" Foreground="Red" FontSize="13" Canvas.Left="163" Canvas.Top="42"  />






                <TextBlock FontFamily="Verdana" TextWrapping="Wrap" FontSize="14" Text="Date From" Canvas.Top="301" Canvas.Right="400" Canvas.Left="13"   />
                <dates:DatePicker x:Name="dateTimePickerFrom" Width="270" Height="30" Canvas.Top="294" Canvas.Left="58"/>
                <TextBox x:Name="txtdate" Visibility="Hidden" Text="{Binding ElementName=dateTimePickerFrom, Path=CurrentlySelectedDate,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Height="33" Canvas.Top="199" Canvas.Left="529" TextChanged="txtdate_TextChanged" />
                <TextBox x:Name="txtdateid" Visibility="Hidden" Text="{Binding ElementName=dateTimePickerFrom, Path=IDLNo}" Height="25" Canvas.Top="207" Canvas.Left="479" TextChanged="txtdateid_TextChanged"/>
                <TextBox x:Name="txtidl" Visibility="Hidden" Text="{Binding ElementName=dateTimePickerFrom, Path=IDLNumbers}" Height="25" Canvas.Top="207" Canvas.Left="726" Width="43" TextChanged="txtidl_TextChanged"/>

                <TextBlock FontFamily="Verdana"  FontSize="14" Text="To" Canvas.Top="297" Canvas.Right="235" Canvas.Left="421"   />
                <dates:DatePicker x:Name="dateTimePickerTo" Width="270" Height="30" Canvas.Top="291" Canvas.Left="407"/>
                <TextBox x:Name="txtdateTo1" Visibility="Hidden" Text="{Binding ElementName=dateTimePickerTo, Path=CurrentlySelectedDate,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Height="33" Canvas.Top="248" Canvas.Left="529" TextChanged="txtdate_TextChanged"  />
                <TextBox x:Name="txtdateidto" Visibility="Hidden" Text="{Binding ElementName=dateTimePickerTo, Path=IDLNo}" Height="27" Canvas.Top="250" Canvas.Left="483" TextChanged="txtdateid_TextChanged"/>
                <TextBox x:Name="txtidlto" Visibility="Hidden" Text="{Binding ElementName=dateTimePickerTo, Path=IDLNumbers}" Height="25" Canvas.Top="250" Canvas.Left="725" Width="44" TextChanged="txtidl_TextChanged"/>




                <TextBlock  FontFamily="Verdana" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="14" Text="Time" Canvas.Left="302" Canvas.Top="301" />
                <xctk:ButtonSpinner  x:Name="txtFrom" Visibility="Visible"   Height="29"  Canvas.Left="342"  Width="67" Spin="txtFrom_Spin" Canvas.Top="294" >
                    <TextBox Text="{Binding TimeFrom,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Margin="-1,-1,-1,-1" BorderThickness="1" IsEnabled="False"  Height="27" />
                </xctk:ButtonSpinner>

                <TextBlock FontFamily="Verdana" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Text="Time" Canvas.Left="648" Canvas.Top="297"  />
                <xctk:ButtonSpinner x:Name="txtTo" Height="29" Visibility="Visible"  Width="67" Canvas.Left="689" Spin="txtTo_Spin" Canvas.Top="291"  >
                    <TextBox Text="{Binding TimeTo,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Margin="-1,-1,-1,-1" BorderThickness="1" IsEnabled="False"  Height="27" />
                </xctk:ButtonSpinner>




                <TextBox x:Name="txtIDLDate" Visibility="Hidden" Text="{Binding Path=DateFroms,StringFormat=\{0:dd-MMM-yyyy\}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  FontFamily="Verdana" TextWrapping="Wrap" FontSize="14" Width="123" Height="29"  IsEnabled="False" Canvas.Left="585" Canvas.Top="15"/>
                <TextBlock x:Name="txtDateID"  Visibility="Hidden" FontFamily="Verdana" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Text="{Binding DateIDFrom,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"   Canvas.Left="769" Canvas.Top="112" />
                <TextBlock x:Name="txtIDL" Visibility="Hidden" FontFamily="Verdana" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="14" Text="{Binding IDLFrom,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  Foreground="Red" Canvas.Left="782" Canvas.Top="102" />





                <TextBox x:Name="txtIDLDateTo1" Visibility="Hidden" Text="{Binding Path=DateTos,StringFormat=\{0:dd-MMM-yyyy\}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  FontFamily="Verdana" TextWrapping="Wrap" FontSize="14" Width="123" Height="29"  IsEnabled="False" Canvas.Left="735" Canvas.Top="15"/>
                <TextBlock x:Name="txtDateIDTo" Visibility="Hidden"  FontFamily="Verdana" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="14" Text="{Binding DateIDTo,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"   Canvas.Left="830" Canvas.Top="60" />
                <TextBlock x:Name="txtIDLTo" Visibility="Hidden" FontFamily="Verdana" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="14" Text="{Binding IDLTo,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Canvas.Left="796" Canvas.Top="60" Foreground="Red" />




                <TextBlock FontFamily="Verdana"  FontSize="14" Text="Crew Group " Canvas.Left="16" Canvas.Top="145"  />
                <Border  BorderThickness="1" BorderBrush="Gray" Height="209" Width="295" Canvas.Left="161" Canvas.Top="61" >
                    <Canvas>
                        <TextBlock FontFamily="Verdana"  FontSize="14" Text="Select Crew Group " Canvas.Left="11" Canvas.Top="1"  />

                        <ListBox x:Name="Userlist"  SelectedItem="{Binding Path = SPeopleList,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ItemsSource="{Binding PeopleList,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"  Canvas.Top="19" Canvas.Left="4" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Width="280" Height="184">

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock  Text="{Binding Position1}">
                                            <!--<i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Checked">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}" CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="Unchecked">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}}" CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>-->

                                        </TextBlock>

                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                        </ListBox>


                    </Canvas>
                </Border>

                <TextBlock  Text="{Binding AddGroupMessage.UserNameMessage,Mode=TwoWay}" Foreground="Red" FontSize="13" Canvas.Top="274" Canvas.Left="159"  />

                <Button Width="100" Height="31" Style="{StaticResource HeaderButton1}" Content="Add Group" Command="{Binding AddCommand}" CommandParameter="{Binding SPeopleList}" Canvas.Left="788" Canvas.Top="291" />


                <DataGrid x:Name="AddLogBookGrid"  BorderThickness="0" Background="WhiteSmoke" FontFamily="Verdana" FontSize="12" ItemsSource="{Binding AddPeopleList}"
                      GridLinesVisibility="Horizontal" SelectionUnit="FullRow"  SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column"  BorderBrush="LightGray" RowHeight="25" ColumnWidth="Auto" 
                      AutoGenerateColumns="False"   VerticalScrollBarVisibility="Auto" VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray"  Canvas.Left="13" Canvas.Top="335" Width="876" Height="166">

                    <DataGrid.Columns>

                        <DataGridTextColumn  Binding="{Binding Path=Position1}" IsReadOnly="True" Header="Crew Group" MaxWidth="470" Width="*">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding Path=DateFroms1,Mode=TwoWay}" IsReadOnly="True" Header="Date From" MaxWidth="130" Width="*" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding Path=DateTo1,Mode=TwoWay}" IsReadOnly="True" Header="Date To" MaxWidth="130" Width="*" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>




                        <DataGridTemplateColumn  MaxWidth="90" Width="*" Header="Time From">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <xctk:ButtonSpinner  x:Name="txtFrom"  Width="65" Spin="txtFrom_Spin"  Margin="5,0,0,0" >
                                        <TextBox Text="{Binding Timefrom,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"  BorderThickness="1" IsEnabled="False"  />
                                    </xctk:ButtonSpinner>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTemplateColumn  MaxWidth="90" Width="*" Header="Time To">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <xctk:ButtonSpinner  x:Name="txtTo"  Width="65" Spin="txtTo_Spin"  Margin="5,0,0,0" >
                                        <TextBox Text="{Binding Timeto,UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"  BorderThickness="1" IsEnabled="False"  />
                                    </xctk:ButtonSpinner>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>


                        <!--<DataGridTextColumn  Binding="{Binding Path= Timeto, Mode=TwoWay}" IsReadOnly="True" Header="Time To" MaxWidth="150" Width="*" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>-->

                        <DataGridTemplateColumn MaxWidth="75" Width="*" Header="Remove">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Width="80"  FontWeight="Normal"  FontSize="13" FontFamily="Verdana" VerticalAlignment="Center" HorizontalContentAlignment="Center">
                                            <Hyperlink  Command="{Binding Path=DataContext.RemoveCommand,RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding}"   Name="Remove" Foreground="#0000cc">Remove</Hyperlink>
                                        </Label>

                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>




                    </DataGrid.Columns>

                </DataGrid>

                <TextBlock TextWrapping="Wrap" Foreground="Blue" FontFamily="Verdana" FontSize="14"  Canvas.Top="531" Canvas.Left="19" >
                    <Hyperlink  Name="CheckStatus" Foreground="Red" Command="{Binding StatusCommand}" CommandParameter="{Binding LogbookStatus}">Check Status</Hyperlink>
                </TextBlock>


                <Button Width="100" Height="31" Style="{StaticResource HeaderButton1}" Content="Save" Command="{Binding SaveCommand}" CommandParameter="{Binding LogbookStatus}" Canvas.Left="675" Canvas.Top="517" />
                <Button Width="100" Height="31" Style="{StaticResource HeaderButton1}" Content="Cancel" Command="{Binding CancelCommand}" Canvas.Left="789" Canvas.Top="517" />
            </Canvas>
        </GroupBox>

        <Button Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right"  VerticalAlignment="Top"   Command="{Binding CancelCommand}" >
            <StackPanel>
                <Image Height="22" Width="22"   Source="/WorkShipVersionII;component/Images/closebtnRed.png" />
            </StackPanel>
        </Button>

    </Grid>
</UserControl>
