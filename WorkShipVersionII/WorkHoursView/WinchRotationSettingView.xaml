<UserControl x:Class="WorkShipVersionII.WorkHoursView.WinchRotationSettingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkShipVersionII.WorkHoursView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid MaxWidth="1000" Width="Auto">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--<UniformGrid Grid.Row="0" Margin="30,0,-1050,5" x:Name="MooringWinchUniformGrid" Columns="2" >



            <Grid Margin="55,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="10*"/>
                </Grid.ColumnDefinitions>

                <Button Margin="640,0,0,0" Grid.Column="1"  Style="{StaticResource HeaderButton1}" Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="AddRopeDamage" >
                    <TextBlock TextWrapping="Wrap"  Text="  Add Damage Line  "/>

                    <Button.DataContext>
                        <vm:ChildPopUPModelWorkHours/>
                    </Button.DataContext>
                </Button>

                -->
        <!--<Button  Grid.Column="2"  Style="{StaticResource HeaderButton1}" Command="{Binding ElementName=WorkHoursContent,Path=DataContext.NavCommand}" CommandParameter="RopeDiscard" >
                    <TextBlock TextWrapping="Wrap"  Text="Rope Discard"/>

                    <Button.DataContext>
                        <vm:ChildPopUPModelWorkHours/>
                    </Button.DataContext>
                </Button>-->
        <!--
                <TextBlock Grid.Column="2"  HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap" Foreground="Blue" FontFamily="Verdana" FontSize="14" Margin="20,0,0,0"   Padding="0,0,10,0"   >
                      <Hyperlink Command="{Binding HelpCommand}" Name="Help" Foreground="#0000cc">Help</Hyperlink>
                </TextBlock>

            </Grid>
        </UniformGrid>-->

        <Grid Grid.Row="1">
            <Canvas >

                
                <TextBlock Style="{StaticResource HeaderText1}" Canvas.Top="28" Grid.Row="2"  Canvas.Right="20" HorizontalAlignment="Right" Foreground="Blue"  Padding="2" Grid.Column="0"      >
                    <Hyperlink Command="{Binding HelpCommand}" Name="Help" >Help</Hyperlink>
                </TextBlock>
            </Canvas>
        </Grid>
        <Canvas Grid.Row="2" >
            <TextBlock Canvas.Top="0" FontSize="15"   Canvas.Left="-30" Text="The values are set by your office for inspection, discard, end to end and winch rotation settings. Where value = '0', it means the field is either not defined or infinite. "></TextBlock>
        </Canvas>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="341*"/>
                <ColumnDefinition Width="532*"/>
                <ColumnDefinition Width="84*"/>
                <ColumnDefinition Width="124*"/>
            </Grid.ColumnDefinitions>



           
            <DataGrid  x:Name="OnboardGrid" Margin="0,60,0,0" BorderThickness="0" ColumnHeaderHeight="35" Background="WhiteSmoke" FontFamily="Verdana" FontSize="12" ItemsSource="{Binding LoadUserAccess}"
                      GridLinesVisibility="Horizontal" SelectionUnit="FullRow"  SelectionMode="Single" CanUserAddRows="False" HeadersVisibility="Column"  BorderBrush="LightGray"  ColumnWidth="Auto" 
                    CanUserDeleteRows="False"  AutoGenerateColumns="False"   VerticalScrollBarVisibility="Auto" VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" Grid.ColumnSpan="4" >

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0.2,0,0.2,0"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background"  Value="WhiteSmoke" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>




                <DataGrid.Columns >
                    <DataGridTextColumn  Binding="{Binding Path= Id,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="Id" Visibility="Hidden"/>

                    <DataGridTextColumn  Binding="{Binding Path=Manufacturer}" IsReadOnly="True"  Header="Manufacturer" MaxWidth="200" Width="*"   >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>


                    <DataGridTextColumn  Binding="{Binding Path=RopeType}" IsReadOnly="True"   Header="Rope Type"  MaxWidth="280"  Width="*"   >
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,0,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                 
                    <DataGridTextColumn  Binding="{Binding Path=MaximumRunningHours}" IsReadOnly="True"  MaxWidth="200" Width="*">
                        <DataGridTextColumn.Header>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Center" Text="Maximum Running Hours"/>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>

                    </DataGridTextColumn>

                    <DataGridTextColumn  Binding="{Binding Path=MaximumMonthsAllowed}"  IsReadOnly="True"  MaxWidth="285" Width="*">
                        <DataGridTextColumn.Header>
                            <TextBlock TextWrapping="Wrap"  TextAlignment="Center" Text="Maximum Months Allowed"/>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn  Binding="{Binding Path=LeadFrom}" IsReadOnly="True"  MaxWidth="235" Width="*">

                        <DataGridTextColumn.Header>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Center" Text="Lead From"/>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn  Binding="{Binding Path=LeadTo}" IsReadOnly="True"  MaxWidth="235" Width="*">

                        <DataGridTextColumn.Header>
                            <TextBlock TextWrapping="Wrap" TextAlignment="Center" Text="Lead To"/>
                        </DataGridTextColumn.Header>
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                </DataGrid.Columns>

            </DataGrid>




        </Grid>

    </Grid>
</UserControl>
