<Application x:Class="WorkShipVersionII.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" StartupUri="LoginWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
    <Application.Resources>
        <ResourceDictionary>
            <!--<vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />
            xmlns:vm="clr-namespace:WorkShipVersionII.ViewModel"-->
            <!--<DataTemplate DataType="{x:Type vm:AddCrewViewModel}">
                <views:AddCrewView/>
            </DataTemplate>-->
            <!--<DataTemplate DataType="{x:Type vm:NotificationViewModel}">
                <views:NotificationView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CrewManagementViewModel}">
                <views:CrewManagementView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:WorkRestHoursViewModel}">
                <views:WorkRestHoursView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ReportsViewModel}">
                <views:ReportsView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:AdministrationViewModel}">
                <views:AdministrationView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CertificationViewModel}">
                <views:CertificationView/>
            </DataTemplate>-->

            <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                            <Viewbox Height="250"
                         Width="320">
                                <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Margin="-6,3,25,0"/>
                            </Viewbox>
                        </ControlTemplate>               
                      
                    </Setter.Value>
                </Setter>
            </Style>

            <!--<Style TargetType="{x:Type Control}" x:Key="DatePickerTextBoxStyle">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Style>
            <Style x:Key="styleCalendar1" TargetType="{x:Type DatePickerTextBox}" >
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBox x:Name="PART_TextBox"
                             Text="{Binding Path=SelectedDate, StringFormat='dd-MMM-yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" Style="{StaticResource DatePickerTextBoxStyle}" >
                            </TextBox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <Style TargetType="{x:Type Button}" x:Key="HeaderButton1">
                <Setter Property="FontFamily" Value="Verdana" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinHeight" Value="31" />
                <Setter Property="MaxHeight" Value="31" />
                <Setter Property="Background" Value="#ededef" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="HeaderText1">
                <Setter Property="FontFamily" Value="Verdana" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
            </Style>
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" Value="Silver" />
                <Setter Property="BorderBrush" Value="#A0A0A0" />
                <!--<Setter Property="BorderBrush" Value="#A0A0A0"/>-->
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Height" Value="30" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

            <Style TargetType="{x:Type Menu}" x:Key="MenuTypeCrew">
                <Setter Property="Background" Value="#003366" />
                <Setter Property="Foreground" Value="WhiteSmoke" />
                <Setter Property="FontFamily" Value="Verdana" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="MinWidth" Value="200" />
                <Setter Property="MaxWidth" Value="250" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>
            
            
            

            <Style x:Key="MainMenuitem" TargetType="MenuItem">                <Setter Property="Background" Value="#003366" />                <Setter Property="Foreground" Value="WhiteSmoke" />                <Setter Property="Template">                    <Setter.Value>                        <ControlTemplate TargetType="MenuItem">                            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">                                <Grid VerticalAlignment="Center">                                    <Grid.ColumnDefinitions>                                        <ColumnDefinition Width="Auto"/>                                        <ColumnDefinition Width="Auto"/>                                    </Grid.ColumnDefinitions>                                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>                                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>                                    <ContentPresenter TextElement.FontSize="13" TextElement.FontFamily="Verdana" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>                                </Grid>                            </Border>                            <ControlTemplate.Triggers>                                <Trigger Property="Icon" Value="{x:Null}">                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>                                </Trigger>                                <Trigger Property="IsChecked" Value="True">                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>                                </Trigger>                                <Trigger Property="IsHighlighted" Value="True">                                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>                                </Trigger>                                <Trigger Property="IsEnabled" Value="False">                                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>                                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>                                </Trigger>                                <MultiTrigger>                                    <MultiTrigger.Conditions>                                        <Condition Property="IsHighlighted" Value="True"/>                                        <Condition Property="IsEnabled" Value="False"/>                                    </MultiTrigger.Conditions>                                    <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>                                </MultiTrigger>                            </ControlTemplate.Triggers>                        </ControlTemplate>                    </Setter.Value>                </Setter>            </Style>            <Style x:Key="EditSubMenuitem" TargetType="MenuItem">                <Setter Property="Background" Value="#003366" />                <Setter Property="Foreground" Value="WhiteSmoke" />                <Setter Property="MaxWidth" Value="200" />                <Setter Property="Template">                    <Setter.Value>                        <ControlTemplate TargetType="MenuItem">                            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">                                <Grid VerticalAlignment="Center">                                    <Grid.ColumnDefinitions>                                        <ColumnDefinition Width="Auto"/>                                        <ColumnDefinition Width="Auto"/>                                    </Grid.ColumnDefinitions>                                    <ContentPresenter x:Name="Icon"  Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>                                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>                                    <ContentPresenter TextElement.FontSize="13"   TextElement.FontFamily="Verdana" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}"  ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>                                    <Popup Grid.Column="1" x:Name="PART_Popup"  AllowsTransparency="False"  Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right">                                        <!--<Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">                                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">-->                                                <Grid RenderOptions.ClearTypeHint="Enabled" >                                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>                                                    </Canvas>                                                   <Rectangle Fill="Aqua" HorizontalAlignment="Left" Margin="29,2,0,2" Width="0"/>                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>                                                </Grid>                                            <!--</ScrollViewer>                                        </Border>-->                                    </Popup>                                </Grid>                            </Border>                            <ControlTemplate.Triggers>                                <Trigger Property="IsSuspendingPopupAnimation" Value="True">                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>                                </Trigger>                                <Trigger Property="Icon" Value="{x:Null}">                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>                                </Trigger>                                <Trigger Property="IsChecked" Value="True">                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>                                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>                                </Trigger>                                <Trigger Property="IsHighlighted" Value="True">                                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>                                </Trigger>                                <Trigger Property="IsEnabled" Value="False">                                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>                                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>                                </Trigger>                                <!--<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>                                </Trigger>-->                            </ControlTemplate.Triggers>                        </ControlTemplate>                    </Setter.Value>                </Setter>            </Style>

            <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0.1,0,0.1,0" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="WhiteSmoke" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="BorderThickness" Value="0.3,0,0.3,0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}" x:Key="HeaderButtonP">
                <Setter Property="FontFamily" Value="Verdana" />
                <Setter Property="Margin" Value="5,0,5,0" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinHeight" Value="22" />
                <Setter Property="MaxHeight" Value="23" />
                <Setter Property="Background" Value="#ededef" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="HeaderTextP">
                <Setter Property="FontFamily" Value="Verdana" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
            </Style>


           

            <Style TargetType="{x:Type TextBlock}" x:Key="LableText1">                <Setter Property="FontFamily" Value="Verdana" />                <Setter Property="FontSize" Value="13" />                <Setter Property="Width" Value="Auto" />                <Setter Property="TextWrapping" Value="Wrap" />                <Setter Property="VerticalAlignment" Value="Center" />                <Setter Property="Padding" Value="1" />            </Style>            <Style TargetType="{x:Type TextBox}" x:Key="MOperationTextBox">                <Setter Property="FontFamily" Value="Verdana" />                <Setter Property="FontSize" Value="13" />                <Setter Property="Width" Value="200" />                <Setter Property="Height" Value="23"/>                <Setter Property="TextWrapping" Value="Wrap" />                <Setter Property="VerticalAlignment" Value="Center" />                <Setter Property="Padding" Value="1" />            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>